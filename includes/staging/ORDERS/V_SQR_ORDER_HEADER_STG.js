module.exports = (params) => {
  return publish("V_SQR_ORDER_HEADER_STG", {
  type: "view",
  schema: params.target_schema,
  tags: ["staging", "daily"],

    ...params.defaultConfig
}).query(ctx => `


WITH source AS (
  SELECT * FROM  ${ctx.ref(params.source_schema,"ORDER")} AS A
),
rename AS 
(
SELECT 
--MD5 KEYS
  TO_HEX(SHA256( TRIM(ID) )) AS K_POS_ORDER_DLHK
  ,TO_HEX(SHA256( TRIM(COALESCE(LOCATION_ID,'00000000000000000000000000000000') ))) AS K_POS_LOCATION_DLHK
  ,TO_HEX(SHA256( TRIM(COALESCE(REFERENCE_ID,'00000000000000000000000000000000' ) ))) AS K_POS_REFERENCE_DLHK
  ,TO_HEX(SHA256( TRIM(COALESCE(CUSTOMER_ID,'00000000000000000000000000000000') ))) AS K_POS_CUSTOMER_DLHK  
  ,TO_HEX(SHA256( TRIM(COALESCE(TOTAL_MONEY_CURRENCY,'00000000000000000000000000000000') ))) AS K_CURRENCY_DLHK  
--BUSINESS KEYS
  ,ID AS K_POS_ORDER_BK
  ,LOCATION_ID AS K_POS_LOCATION_BK
  ,CUSTOMER_ID AS K_POS_CUSTOMER_BK
  ,REFERENCE_ID AS K_POS_REFERENCE_BK
--TIMESTAMP FIELDS
  ,CREATED_AT AS A_ORDER_CREATED_DTS
  ,UPDATED_AT AS A_ORDER_UPDATED_DTS
  ,CLOSED_AT AS A_ORDER_CLOSED_DTS  
  
--ATTRIBUTES AND METRICS
  ,STATE AS A_ORDER_STATE
  ,ORDER_SOURCE_NAME AS A_ORDER_SOURCE    
  ,CAST(ROUND(COALESCE(NET_AMOUNT_TIP_MONEY_AMOUNT - RETURN_AMOUNT_TIP_MONEY_AMOUNT, 000)/100, 2) AS NUMERIC) AS M_NET_TIP_MONEY_AMT  
  ,TOTAL_SERVICE_CHARGE_AMOUNT AS M_TOTAL_SERVICE_CHARGE_AMT  
  ,CAST(ROUND(COALESCE(RETURN_AMOUNT_TOTAL_MONEY_AMOUNT, 000)/100, 2) AS NUMERIC) AS M_RETURN_TOTAL_AMT
  ,CAST(ROUND(COALESCE(NET_AMOUNT_TOTAL_MONEY_AMOUNT, 000)/100, 2) AS NUMERIC) AS M_NET_TOTAL_AMT
  ,CAST(ROUND(COALESCE(TOTAL_MONEY_AMOUNT, 000)/100, 2) AS NUMERIC) AS M_TOTAL_AMT
  ,CAST(ROUND(COALESCE(TOTAL_TAX_AMOUNT, 000)/100, 2) AS NUMERIC) AS M_TAX_TOTAL_AMT
  ,CAST(ROUND(COALESCE(TOTAL_DISCOUNT_AMOUNT, 000)/100, 2) AS NUMERIC) AS M_DISCOUNT_TOTAL_AMT
  
  --METADATA (MD)
  ,CURRENT_TIMESTAMP as MD_LOAD_DTS
  ,(SELECT invocation_id FROM ${ctx.ref("H_INVOCATION_ID")}) AS MD_INTGR_ID
FROM source
)

SELECT * FROM rename

`)
}